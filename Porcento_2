<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Taxa de Cumprimento</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #121212;
            color: #e0e0e0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        table {
            width: 80%;
            max-width: 700px;
            border-collapse: collapse;
            background-color: #1e1e1e;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        th, td {
            padding: 15px;
            text-align: center;
            border-bottom: 1px solid #333;
        }
        th {
            background-color: #333;
        }
        td[contenteditable="true"] {
            background-color: #2e2e2e;
            cursor: text;
        }
        .highlight {
            background-color: #2e2e2e;
        }
        input[type="date"] {
            background-color: #333;
            color: #fff;
            border: 1px solid #555;
            padding: 5px;
            border-radius: 5px;
            outline: none;
            cursor: pointer;
        }
        input[type="date"]::-webkit-calendar-picker-indicator {
            filter: invert(1);
        }
    </style>
</head>
<body>    
    <table>
        <tr> 
            <th>Total</th> 
            <th>Cumprido</th>
            <th>Taxa de Cumprimento</th>
        </tr>
        <tr>
            <td contenteditable="true" id="total" class="highlight"></td>
            <td contenteditable="true" id="cumprido" class="highlight"></td>
            <td id="taxa"></td>
        </tr>
        <tr>
            <td colspan="2"><strong>Diferença</strong></td>
            <td id="diferenca"></td>
        </tr>
        <tr>
            <td><strong>Data Final</strong></td>
            <td colspan="2"><input type="date" id="data-final" class="highlight"></td>
        </tr>
        <tr>
            <td colspan="2"><strong>Faltam</strong></td>
            <td id="faltam"></td>
        </tr>
        <tr>
            <td colspan="2"><strong>Horas por Tarefa</strong></td>
            <td id="horas-por-tarefa"></td>
        </tr>
    </table>
    <script>
        const totalCell = document.getElementById('total');
        const cumpridoCell = document.getElementById('cumprido');
        const taxaCell = document.getElementById('taxa');
        const diferencaCell = document.getElementById('diferenca');
        const dataFinalInput = document.getElementById('data-final');
        const faltamCell = document.getElementById('faltam');
        const horasPorTarefaCell = document.getElementById('horas-por-tarefa');

        function calcularTaxa() {
            const total = parseFloat(totalCell.innerText);
            const cumprido = parseFloat(cumpridoCell.innerText);

            if (!isNaN(total) && !isNaN(cumprido)) {
                const taxa = (cumprido / total) * 100;
                taxaCell.innerText = `${taxa.toFixed(2)}%`;

                const diferenca = total - cumprido;
                diferencaCell.innerText = diferenca.toFixed(2);
            } else {
                taxaCell.innerText = 'Insira números válidos';
                diferencaCell.innerText = '';
            }
        }

        function calcularFaltam() {
            const dataFinal = new Date(dataFinalInput.value);
            const agora = new Date();
            const diferencaHoras = (dataFinal - agora) / (1000 * 60 * 60);
            const diferencaDias = diferencaHoras / 24;

            if (!isNaN(diferencaHoras) && diferencaHoras > 0) {
                faltamCell.innerHTML = `faltam ${diferencaHoras.toFixed(0)} horas (${diferencaDias.toFixed(0)} dias)`;
                faltamCell.className = 'c';
            } else {
                faltamCell.innerHTML = 'Data inválida';
                faltamCell.className = '';
            }
        }

        function calcularHorasPorTarefa() {
            const total = parseFloat(totalCell.innerText);
            const cumprido = parseFloat(cumpridoCell.innerText);
            const tarefasRestantes = total - cumprido;
            const dataFinal = new Date(dataFinalInput.value);
            const agora = new Date();
            const diferencaHoras = (dataFinal - agora) / (1000 * 60 * 60);

            if (!isNaN(diferencaHoras) && diferencaHoras > 0 && !isNaN(tarefasRestantes) && tarefasRestantes > 0) {
                const horasPorTarefa = diferencaHoras / tarefasRestantes;
                horasPorTarefaCell.innerHTML = `${horasPorTarefa.toFixed(2)} h`;
                horasPorTarefaCell.className = 'c';
            } else {
                horasPorTarefaCell.innerHTML = 'Dados inválidos';
                horasPorTarefaCell.className = '';
            }
        }

        totalCell.addEventListener('input', () => {
            calcularTaxa();
            calcularHorasPorTarefa();
        });
        cumpridoCell.addEventListener('input', () => {
            calcularTaxa();
            calcularHorasPorTarefa();
        });
        dataFinalInput.addEventListener('input', () => {
            calcularFaltam();
            calcularHorasPorTarefa();
        });
    </script>
</body>
</html>
